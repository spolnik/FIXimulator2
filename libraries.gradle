ext {
    fixmlVersion = '1.5.3'
    dropwizardVersion = '0.8.1'

    libs = libsMap(
            slf4j_api: 'org.slf4j:slf4j-api:1.7.10',
            logback: 'ch.qos.logback:logback-classic:1.1.3',
            mina: 'org.apache.mina:mina-core:1.1.0',
            jdesktop: 'org.jdesktop:beansbinding:1.2.1',
            apache: [
                httpclient: 'org.apache.httpcomponents:httpclient:4.4.1'
            ],
            dropwizard: [
                    core: "io.dropwizard:dropwizard-core:$dropwizardVersion",
                    client: "io.dropwizard:dropwizard-client:$dropwizardVersion"
            ],
            quickfixj:  "quickfixj:quickfixj-all:$fixmlVersion",
            test: [
                    junit: 'junit:junit:4.11',
                    assertj: 'org.assertj:assertj-core:1.7.1',
                    mockito: 'org.mockito:mockito-core:1.10.19'
            ]
    )
}

def libsMap(Map<String, ?> map) {
    def processMap
    processMap = { innerMap ->
        innerMap.each {
            if (it.value instanceof Map) {
                innerMap[it.key] = processMap(it.value)
            }
        }
        innerMap.asImmutable().withDefault {
            throw new Exception(
                    "No entry '$it' in dependency map (candidates: ${innerMap.keySet().sort().join(", ")})" )
        }
    }
    processMap(map)
}